{"version":3,"sources":["components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/App/App.jsx","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","className","s","box","options","FeedbackOptions","onLeaveFeedback","buttonContainer","map","option","buttonContainerItem","type","onClick","Section","title","children","App","useState","setGood","setNeutral","setBad","countTotalFeedback","target","dataset","feedback","prevState","result","percentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uOAGe,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,oBCwBEC,EAvBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,mCACGD,EACC,qBAAIE,UAAWC,IAAEC,IAAjB,UACE,qBAAIF,UAAWC,IAAEE,QAAjB,mBAAiCR,EAAjC,OACA,qBAAIK,UAAWC,IAAEE,QAAjB,sBAAoCP,EAApC,OACA,qBAAII,UAAWC,IAAEE,QAAjB,kBAAgCN,EAAhC,OACA,qBAAIG,UAAWC,IAAEE,QAAjB,oBAAkCL,EAAlC,OACA,qBAAIE,UAAWC,IAAEE,QAAjB,gCAA8CJ,EAA9C,UAGF,cAACP,EAAD,CAAcC,QAAQ,yB,gBCQbW,EApBS,SAAC,GAAD,IAAGD,EAAH,EAAGA,QAASE,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKL,UAAWC,IAAEK,gBAAlB,SACGH,EAAQI,KAAI,SAAAC,GAAM,OACjB,wBACER,UAAWC,IAAEQ,oBAEbC,KAAK,SACL,gBAAeF,EACfG,QAASN,EALX,SAOGG,GALIA,SCKEI,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MCACX,EAAU,CAAC,OAAQ,UAAW,OAErB,SAASY,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOnB,EAAP,KAAYsB,EAAZ,KAEMC,EAAqB,WACzB,OAAOzB,EAAOC,EAAUC,GA+B1B,OACE,qCACE,cAAC,EAAD,CAASgB,MAAK,wBAAd,SACE,cAAC,EAAD,CAAiBV,QAASA,EAASE,gBAxBjB,SAAC,GAGvB,OAHsC,EAAbgB,OACGC,QAApBC,UAGN,IAAK,OACHN,GAAQ,SAAAO,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHN,GAAW,SAAAM,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHL,GAAO,SAAAK,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aASF,cAAC,EAAD,CAASX,MAAK,aAAd,SACE,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,IACPrB,mBAvCgC,WACtC,IAAM0B,EAASL,IAETM,EAAqB,IAAP/B,EAAc8B,EAClC,OAAOA,EAASE,KAAKC,MAAMF,GAAc,EAmCfG,U,MCnD9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,wBAAwB,QAAU,8B,kBCA1DD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,oBAAsB,gD","file":"static/js/main.c26634ec.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    {total ? (\r\n      <ul className={s.box}>\r\n        <li className={s.options}> Good:{good} </li>\r\n        <li className={s.options}> Neutral:{neutral} </li>\r\n        <li className={s.options}> Bad:{bad} </li>\r\n        <li className={s.options}> Total:{total} </li>\r\n        <li className={s.options}>Positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n    ) : (\r\n      <Notification message=\"No feedback given\" />\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.buttonContainer}>\r\n    {options.map(option => (\r\n      <button\r\n        className={s.buttonContainerItem}\r\n        key={option}\r\n        type=\"button\"\r\n        data-feedback={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import React from 'react';\nimport { useState } from 'react';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Section from '../Section/Section';\n\nconst options = ['good', 'neutral', 'bad'];\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const result = countTotalFeedback();\n\n    const percentage = (good * 100) / result;\n    return result ? Math.round(percentage) : 0;\n  };\n\n  const onLeaveFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n\n    switch (feedback) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <Section title={`Please leave feedback`}>\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n      <Section title={`Statistics`}>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Statistics_box__1sasP\",\"options\":\"Statistics_options__1t-4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FeedbackOptions_buttonContainer__3soyM\",\"buttonContainerItem\":\"FeedbackOptions_buttonContainerItem__2Q7yu\"};"],"sourceRoot":""}